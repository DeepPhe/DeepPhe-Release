package org.healthnlp.deepphe.uima.drools;

import java.lang.Object;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.Date;

import org.healthnlp.deepphe.util.FHIRUtils;
import org.healthnlp.deepphe.util.FHIRConstants;

import org.healthnlp.deepphe.fhir.fact.Fact;
import org.healthnlp.deepphe.fhir.fact.ObservationFact;
import org.healthnlp.deepphe.fhir.fact.FactFactory;
import org.healthnlp.deepphe.fhir.fact.FactHelper;

import org.healthnlp.deepphe.fhir.summary.*;
import org.healthnlp.deepphe.uima.drools.*;



/*
* Get all PR status for tumor
*/
rule "collect-all-tumor-PRStatus"
	salience 67668
	no-loop true
	when 
		$record : MedicalRecord()
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId)
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_PR_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-PRStatus")

		$interprets :Set()
		from collect(Fact(category == FHIRConstants.HAS_INTERPRETATION, containerIdentifier contains $identifier))
		
		$methods :Set()
		from collect(Fact(category == FHIRConstants.HAS_METHOD, containerIdentifier contains $identifier))
	    
	then
		modify($recepFact){	addRulesApplied("collect-all-tumor-PRStatus") }
		$mt.addReceptorStatus($recepFact, $interprets, $methods);
		System.out.print(".");
		
end

/*
* Get all ER status for tumor
*/
rule "collect-all-tumor-ERStatus"
	salience 67667
	no-loop true
	when 
		$record : MedicalRecord()
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId)
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_ER_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-ERStatus")

		$interprets :Set()
		from collect(Fact(category == FHIRConstants.HAS_INTERPRETATION, containerIdentifier contains $identifier))
		
		$methods :Set()
		from collect(Fact(category == FHIRConstants.HAS_METHOD, containerIdentifier contains $identifier))
	    
	then
		modify($recepFact){	addRulesApplied("collect-all-tumor-ERStatus") }
		$mt.addReceptorStatus($recepFact, $interprets, $methods);
		System.out.print(".");
end

/*
* Get all Her2 status for tumor
*/
rule "collect-all-tumor-Her2Status"
	salience 67666
	no-loop true
	when 
		$record : MedicalRecord()
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId)
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_HER2_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-Her2Status")

		$interprets :Set()
		from collect(Fact(category == FHIRConstants.HAS_INTERPRETATION, containerIdentifier contains $identifier))
		
		$methods :Set()
		from collect(Fact(category == FHIRConstants.HAS_METHOD, containerIdentifier contains $identifier))
	    
	then
		modify($recepFact){	addRulesApplied("collect-all-tumor-Her2Status") }
		$mt.addReceptorStatus($recepFact, $interprets, $methods);
		System.out.print(".");	
end


rule "set-tumor-PRStatus"
	salience 67565
	no-loop true
	when 
		$record : MedicalRecord()
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY)
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId, 
				rulesApplied not contains "set-tumor-PRStatus")
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $tSumF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, summaryId == $newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF, $mergedTumorId : mergedTumorId)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_PR_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied contains "collect-all-tumor-PRStatus")
	    
	    not(Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_PR_STATUS,
	    	containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-PRStatus"))
	    not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_PR_STATUS, 
	    	summaryId matches (".*" + $mergedTumorId + ".*")))	
	    
	then
		modify($tF){	addRulesApplied("set-tumor-PRStatus") }
		Fact tf = $mt.getTumorSummaryReceptor(FHIRConstants.HAS_PR_STATUS, $recepFact.getName(), $cancerFact);
		
		if( tf != null){
		    modify($record){
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_RECEPTOR_STATUS, tf),
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_PR_STATUS, tf)
			}
		    
		    insert(tf);
		}
		System.out.print(".");
end


rule "set-tumor-ERStatus"
	salience 67564
	no-loop true
	when 
		$record : MedicalRecord()
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY)
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId, 
				rulesApplied not contains "set-tumor-ERStatus")
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $tSumF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, summaryId == $newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF, $mergedTumorId : mergedTumorId)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_ER_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied contains "collect-all-tumor-ERStatus")
	    
	    not(Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_ER_STATUS,
	    	containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-ERStatus"))

	    not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_ER_STATUS, 
	    	summaryId matches (".*" + $mergedTumorId + ".*")))
	    
	then
		modify($tF){	addRulesApplied("set-tumor-ERStatus") }
		Fact tf = $mt.getTumorSummaryReceptor(FHIRConstants.HAS_ER_STATUS, $recepFact.getName(), $cancerFact);
		
		if( tf != null){
		    modify($record){
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_RECEPTOR_STATUS, tf),
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_ER_STATUS, tf)
			}
		    
		    insert(tf);
		}
		System.out.print(".");
end


rule "set-tumor-Her2Status"
	salience 67563
	no-loop true
	when 
		$record : MedicalRecord()
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY)
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, $t_summaryId : summaryId, 
				rulesApplied not contains "set-tumor-Her2Status")
	    IdMapper(oldSummaryId == $t_summaryId, $newSummaryId : newSummaryId)
	    $tSumF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, summaryId == $newSummaryId)
	    $mt : MergedTumor(tumorSiteFactSet contains $tF, $mergedTumorId : mergedTumorId)
	    
	    $recepFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_HER2_STATUS,
	    	$identifier : identifier, containerIdentifier contains $t_summaryId, rulesApplied contains "collect-all-tumor-Her2Status")
	    
	    not(Fact(documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_HER2_STATUS,
	    	containerIdentifier contains $t_summaryId, rulesApplied not contains "collect-all-tumor-Her2Status"))

	    not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_HER2_STATUS, 
	    	summaryId matches (".*" + $mergedTumorId + ".*")))
	    
	then
		modify($tF){	addRulesApplied("set-tumor-Her2Status") }
		Fact tf = $mt.getTumorSummaryReceptor(FHIRConstants.HAS_HER2_STATUS, $recepFact.getName(), $cancerFact);
		
		if( tf != null){
		    modify($record){
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_RECEPTOR_STATUS, tf),
				getCancerSummary().getTumorSummaryByIdentifier(FHIRConstants.TUMOR_SUMMARY +"-"+$mt.getMergedTumorId()).getPhenotype().addFact(FHIRConstants.HAS_HER2_STATUS, tf)
			}
		    
		    insert(tf);
		}
		System.out.print(".");
end