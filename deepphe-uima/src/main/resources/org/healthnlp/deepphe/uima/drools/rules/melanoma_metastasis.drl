//created on: May 5, 2017
package org.healthnlp.deepphe.uima.drools

/**
* in presence of "Metastatic_Neoplasm" diagnosis make this tumor tupe = "distant"
*/
rule  "mela-distant"
		salience 88879
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName, $domainName == FHIRConstants.DOMAIN_MELANOMA)	
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, $newSummaryId : summaryId)
		//
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_DIAGNOSIS, 
			$deepName : name, ($deepName == "Metastatic_Neoplasm" || ancestors contains "Metastatic_Neoplasm"), $deepOldSummaryId : summaryId)
	    IdMapper(oldSummaryId == $deepOldSummaryId, $t_summaryId : newSummaryId)
		//
		$tumorFact : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_SITE, $tumor_bs_name :name, 
			documentType != FHIRConstants.RECORD_SUMMARY,
					$tumor_id : identifier, rulesApplied not contains "mela-distant", $tumor_ancestors : ancestors, 
					summaryId == $deepOldSummaryId,
					($tumor_bs_name != "Lymph_Node" || $tumor_ancestors not contains "Lymph_Node"))		
					
		$side_tFact : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_MODIFIER, type == FHIRConstants.LATERALITY, 
			documentType != FHIRConstants.RECORD_SUMMARY,
					$sideName : name, containerIdentifier contains $deepOldSummaryId)			
		$tl_1 : MergedTumor(tumorSiteFactSet contains $tumorFact, bodySide == $sideName, readyForRetraction == false)
		not (Fact (summaryType==FHIRConstants.TUMOR_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, provenanceFacts contains $tumorFact))
		
	then
		modify($tumorFact){	addRulesApplied("mela-distant") }

		//add new tumor
		String newId = FHIRConstants.TUMOR_SUMMARY +"-"+$tl_1.getMergedTumorId();
		BodySiteFact tf = (BodySiteFact)FactFactory.createFact($tumorFact, FHIRConstants.BODY_SITE, $domain.getOntologyURI()+"#"+$tumorFact.getName(), 
			FHIRConstants.RECORD_SUMMARY);
		tf.addContainerIdentifier($newSummaryId); tf.setSummaryId(newId);
		tf.setIdentifier($tumorFact.getName()+"-"+newId);
		tf.setSummaryId(newId);
		tf.addProvenanceFact($tumorFact);
		tf.addRulesApplied("mela-distant");
		insert(new IdMapper($tumorFact.getIdentifier(), tf.getIdentifier(), $tumorFact.getDocumentType(), $tumorFact.getSummaryId(), newId));
		insert(tf);
//System.out.println("*** distant inserting TUMOR: "+tf.getInfoDrools());
//System.out.println("distant Q_size: "+$tl_1.getQuadrantFactSet().size());
//System.out.println("distant CLo_size: "+$tl_1.getClockfacePosFactSet().size());
		
		Fact tumorTypeF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+FHIRConstants.DISTANT_METASTASIS, $tumorFact, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_TUMOR_TYPE, FHIRConstants.RECORD_SUMMARY, 
															FHIRConstants.TUMOR_TYPE);
	
		
		Fact tumorsideF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+$sideName, tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
															FHIRConstants.LATERALITY);
														
		tumorTypeF.addContainerIdentifier(tf.getSummaryId());
		tumorTypeF.setIdentifier(tumorTypeF.getName()+"-"+newId);
		tumorTypeF.setSummaryId(newId);
		
		tumorsideF.setSummaryId(tf.getSummaryId()); tf.addModifier(tumorsideF);

		Set<Fact> qSet = $tl_1.getQuadrantFactSet();
		for(Fact f : qSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
//System.out.println("distant inserting QF: "+qf.getInfoDrools());
			insert(qf);
		}
		
		Set<Fact> clockSet = $tl_1.getClockfacePosFactSet();
		for(Fact f : clockSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
//System.out.println("distant inserting CLOCKF: "+qf.getInfoDrools());
			insert(qf);
		}
	    
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier(newId).addFact(FHIRConstants.HAS_TUMOR_TYPE, tumorTypeF),
			getCancerSummary().addFact(FHIRConstants.HAS_BODY_SITE, tf)
		}	


		insert (tumorTypeF);
		insert (tumorsideF);

//System.out.println("distant inserting tumorTypeF: "+tumorTypeF.getInfoDrools());
//System.out.println("distant inserting tumorsideF: "+tumorsideF.getInfoDrools());
		
		FactHelper.addFactToSummary(tf, $record.getCancerSummary(), newId, $domain.getOntologyURI());

		
		$tl_1.setReadyForRetraction(true);
		update ($tl_1);
System.out.print(".");		
end

rule "mela-Regional_Lymph_Node"
	salience 88878
	no-loop true
	when
		$record : MedicalRecord()
		$domain : Domain($domainName : domainName, $domainName == FHIRConstants.DOMAIN_MELANOMA)	
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, $newSummaryId : summaryId)
		
		//distant tumor
		$recTumor : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_SITE, $recTumorName : name, $rectAncestors : ancestors, 
			documentType != FHIRConstants.RECORD_SUMMARY,
						($recTumorName == "Lymph_Node" || $rectAncestors contains "Lymph_Node"), $recSummaryId : summaryId,
						rulesApplied not contains "mela-Regional_Lymph_Node")
		$side_tFact : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_MODIFIER, type == FHIRConstants.LATERALITY, 
			documentType != FHIRConstants.RECORD_SUMMARY,
					$sideName : name, containerIdentifier contains $recSummaryId)	
					
		$tl_1 : MergedTumor(tumorSiteFactSet contains $recTumor, bodySide == $sideName, readyForRetraction == false)
		
	then
System.out.print(".");
		modify($recTumor){	addRulesApplied("mela-Regional_Lymph_Node") }
		//add new tumor
		String newId = FHIRConstants.TUMOR_SUMMARY +"-"+$tl_1.getMergedTumorId();
		BodySiteFact tf = (BodySiteFact)FactFactory.createFact($recTumor, FHIRConstants.BODY_SITE, 
			$domain.getOntologyURI()+"#"+$recTumorName, 
			FHIRConstants.RECORD_SUMMARY);
		tf.addContainerIdentifier($newSummaryId); tf.setSummaryId(newId);
		tf.setSummaryId(newId);
		tf.setIdentifier(tf.getName()+"-"+newId);
		tf.addProvenanceFact($recTumor);
		insert(new IdMapper($recTumor.getIdentifier(), tf.getIdentifier(), $recTumor.getDocumentType(), $recTumor.getSummaryId(), tf.getSummaryId()));
		
		
		insert(tf);
		
		Fact tumorTypeF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+FHIRConstants.REGIONAL_METASTASIS, $recTumor, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_TUMOR_TYPE, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.TUMOR_TYPE);
	//System.out.println("$recTumor: "+$recTumor.getInfoDrools());
	//System.out.println("tf: "+tf.getInfoDrools());
	//System.out.println("tumorTypeF: "+tumorTypeF.getInfoDrools());
		
		Fact tumorsideF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+$sideName, tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.LATERALITY);
														
		tumorTypeF.addContainerIdentifier(tf.getSummaryId());
		tumorTypeF.setIdentifier(tumorTypeF.getName()+"-"+newId);
		tumorTypeF.setSummaryId(newId);
	    
	    tumorsideF.setSummaryId(tf.getSummaryId()); tf.addModifier(tumorsideF);
		
		
		Set<Fact> qSet = $tl_1.getQuadrantFactSet();
		for(Fact f : qSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
			insert(qf);
		}
		
		Set<Fact> clockSet = $tl_1.getClockfacePosFactSet();
		for(Fact f : clockSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
			insert(qf);
		}
	    
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier(newId).addFact(FHIRConstants.HAS_TUMOR_TYPE, tumorTypeF),
			getCancerSummary().addFact(FHIRConstants.HAS_BODY_SITE, tf)	
		}	

		insert (tumorTypeF);
		insert (tumorsideF);
		FactHelper.addFactToSummary(tf, $record.getCancerSummary(), newId, $domain.getOntologyURI());
		
		$tl_1.setReadyForRetraction(true);
		update ($tl_1);

		System.out.print(".");

end


rule "mela-primaryTumor"
	salience 88877
	no-loop true
	when
		$record : MedicalRecord()	
		$domain : Domain($domainName : domainName, $domainName == FHIRConstants.DOMAIN_MELANOMA)	
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, $newSummaryId : summaryId)
		//
		$tF : Fact(summaryType == FHIRConstants.TUMOR_SUMMARY, documentType != FHIRConstants.RECORD_SUMMARY, category == FHIRConstants.HAS_DIAGNOSIS, 
			$deepName : name, ($deepName == "Melanoma" || ancestors contains "Melanoma"), $deepOldSummaryId : summaryId)
	    IdMapper(oldSummaryId == $deepOldSummaryId, $t_summaryId : newSummaryId)
		//
		$tumorFact : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_SITE, $tumor_bs_name :name, 
			documentType != FHIRConstants.RECORD_SUMMARY,
					$tumor_id : identifier, rulesApplied not contains "mela-primaryTumor", $tumor_ancestors : ancestors, 
					summaryId == $deepOldSummaryId,
					($tumor_bs_name != "Lymph_Node" || $tumor_ancestors not contains "Lymph_Node"))		
					
		$side_tFact : Fact(summaryType==FHIRConstants.TUMOR_SUMMARY, category == FHIRConstants.HAS_BODY_MODIFIER, type == FHIRConstants.LATERALITY, 
			documentType != FHIRConstants.RECORD_SUMMARY,
					$sideName : name, containerIdentifier contains $deepOldSummaryId)			
		$tl_1 : MergedTumor(tumorSiteFactSet contains $tumorFact, bodySide == $sideName, readyForRetraction == false)
		not (Fact (summaryType==FHIRConstants.TUMOR_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, provenanceFacts contains $tumorFact))
		
	then
		modify($tumorFact){	addRulesApplied("mela-primaryTumor") }
		//add new tumor
		String newId = FHIRConstants.TUMOR_SUMMARY +"-"+$tl_1.getMergedTumorId();
		BodySiteFact tf = (BodySiteFact)FactFactory.createFact($tumorFact, FHIRConstants.BODY_SITE, $domain.getOntologyURI()+"#"+$tumorFact.getName(), 
			FHIRConstants.RECORD_SUMMARY);
		tf.addContainerIdentifier($newSummaryId); tf.setSummaryId(newId);
		tf.setIdentifier($tumorFact.getName()+"-"+newId);
		tf.setSummaryId(newId);
		tf.addProvenanceFact($tumorFact);
		tf.addRulesApplied("mela-primaryTumor");
		insert(new IdMapper($tumorFact.getIdentifier(), tf.getIdentifier(), $tumorFact.getDocumentType(), $tumorFact.getSummaryId(), newId));
		insert(tf);
//System.out.println("*** primaryTumor inserting TUMOR: "+tf.getInfoDrools());
//System.out.println("primaryTumor Q_size: "+$tl_1.getQuadrantFactSet().size());
//System.out.println("primaryTumor CLo_size: "+$tl_1.getClockfacePosFactSet().size());
		
		Fact tumorTypeF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+FHIRConstants.PRIMARY_TUMOR, $tumorFact, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_TUMOR_TYPE, FHIRConstants.RECORD_SUMMARY, 
															FHIRConstants.TUMOR_TYPE);
	
		
		Fact tumorsideF = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+$sideName, tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
															FHIRConstants.LATERALITY);
														
		tumorTypeF.addContainerIdentifier(tf.getSummaryId());
		tumorTypeF.setIdentifier(tumorTypeF.getName()+"-"+newId);
		tumorTypeF.setSummaryId(newId);
		
		tumorsideF.setSummaryId(tf.getSummaryId()); tf.addModifier(tumorsideF);

		Set<Fact> qSet = $tl_1.getQuadrantFactSet();
		for(Fact f : qSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
//System.out.println("primaryTumor inserting QF: "+qf.getInfoDrools());
			insert(qf);
		}
		
		Set<Fact> clockSet = $tl_1.getClockfacePosFactSet();
		for(Fact f : clockSet){
			Fact qf = FactFactory.createTumorFactModifier($domain.getOntologyURI()+"#"+f.getName(), tf, 
														$cancerFact, FHIRConstants.TUMOR_SUMMARY, FHIRConstants.HAS_BODY_MODIFIER, FHIRConstants.RECORD_SUMMARY, 
														FHIRConstants.BODY_MODIFIER);
			qf.setAncestors(f.getAncestors());
			qf.addContainerIdentifier(tf.getSummaryId());
			qf.setIdentifier(tumorTypeF.getName()+"-"+newId);
			qf.setSummaryId(newId);
			tf.addModifier(qf);
//System.out.println("primaryTumor inserting CLOCKF: "+qf.getInfoDrools());
			insert(qf);
		}
	    
		modify($record){
			getCancerSummary().getTumorSummaryByIdentifier(newId).addFact(FHIRConstants.HAS_TUMOR_TYPE, tumorTypeF),
			getCancerSummary().addFact(FHIRConstants.HAS_BODY_SITE, tf)
		}	


		insert (tumorTypeF);
		insert (tumorsideF);

//System.out.println("primaryTumor inserting tumorTypeF: "+tumorTypeF.getInfoDrools());
//System.out.println("primaryTumor inserting tumorsideF: "+tumorsideF.getInfoDrools());
		
		FactHelper.addFactToSummary(tf, $record.getCancerSummary(), newId, $domain.getOntologyURI());

		
		$tl_1.setReadyForRetraction(true);
		update ($tl_1);
System.out.print(".");		
end

