package org.healthnlp.deepphe.uima.drools;

import java.lang.Object;
import java.util.List;
import java.util.ArrayList;

import org.healthnlp.deepphe.util.FHIRUtils;
import org.healthnlp.deepphe.util.FHIRConstants;

import org.healthnlp.deepphe.fhir.fact.Fact;
import org.healthnlp.deepphe.fhir.fact.FactFactory;

import org.healthnlp.deepphe.fhir.summary.*;
import org.healthnlp.deepphe.uima.drools.Summarizer;



// There is no Breast Stage 0
/*
//If Tis, N0, M0 then Stage 0 Breast Cancer 
rule "Stage0-1"
	salience 10001
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*Tis.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage0-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*N0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage0-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*M0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage0-1")
	then

		modify($tFact){	addRulesApplied("Stage0-1") }
		modify($nFact){	addRulesApplied("Stage0-1") }
		modify($mFact){	addRulesApplied("Stage0-1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_0");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}			
		System.out.print(".");
end
*/



//If T1, N0, M0, then Stage IA Breast Cancer 
rule "Stage1A-1"
	salience 10002
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage1A-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1A-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1A-1")
	then

		modify($tFact){	addRulesApplied("Stage1A-1") }
		modify($nFact){	addRulesApplied("Stage1A-1") }
		modify($mFact){	addRulesApplied("Stage1A-1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If T0, N1mi, M0, then Stage IB Breast Cancer  
rule "Stage1B-1"
	salience 10003
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT0.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage1B-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1mi.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1B-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1B-1")
	then

		modify($tFact){	addRulesApplied("Stage1B-1") }
		
		modify($nFact){	addRulesApplied("Stage1B-1") }
		modify($mFact){	addRulesApplied("Stage1B-1") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If T1, N1mi, M0, then Stage IB Breast Cancer  
rule "Stage1B-2"
	salience 10004
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage1B-2")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1mi.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1B-2")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage1B-2")
	then

		modify($tFact){	addRulesApplied("Stage1B-2") }
		modify($nFact){	addRulesApplied("Stage1B-2") }
		modify($mFact){	addRulesApplied("Stage1B-2") }
			
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If T0, N1, M0, then Stage IIA Breast Cancer  
rule "Stage2A-1.1"
	salience 10005
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT0.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage2A-1.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-1.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-1.1")
	then

		modify($tFact){	addRulesApplied("Stage2A-1.1") }
		modify($nFact){	addRulesApplied("Stage2A-1.1") }
		modify($mFact){	addRulesApplied("Stage2A-1.1") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If T1, N1, M0, then Stage IIA Breast Cancer   
rule "Stage2A-2.1"
	salience 10006
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage2A-2.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-2.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-2.1")
	then

		modify($tFact){	addRulesApplied("Stage2A-2.1") }
		modify($nFact){	addRulesApplied("Stage2A-2.1") }
		modify($mFact){	addRulesApplied("Stage2A-2.1") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If T2, N0, M0, then Stage IIA Breast Cancer  
rule "Stage2A-3.1"
	salience 10007
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT2.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage2A-3.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-3.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-3.1")
	then

		modify($tFact){	addRulesApplied("Stage2A-3.1") }
		modify($nFact){	addRulesApplied("Stage2A-3.1") }
		modify($mFact){	addRulesApplied("Stage2A-3.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
	
		System.out.print(".");
end

//If T2, N1, M0, then Stage IIB Breast Cancer 
rule "Stage2B-1.1"
	salience 10008
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT2.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage2B-1.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2B-1.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2B-1.1")
	then

		modify($tFact){	addRulesApplied("Stage2B-1.1") }
		modify($nFact){	addRulesApplied("Stage2B-1.1") }
		modify($mFact){	addRulesApplied("Stage2B-1.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T3, N0, M0, then Stage IIB Breast Cancer 
rule "Stage2B-2.1"
	salience 10009
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT3.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage2B-2.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2B-2.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2B-2.1")
	then

		modify($tFact){	addRulesApplied("Stage2B-2.1") }
		modify($nFact){	addRulesApplied("Stage2B-2.1") }
		modify($mFact){	addRulesApplied("Stage2B-2.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T0, N2, M0, then Stage IIIA Breast Cancer 
rule "Stage3A-1.1"
	salience 10010
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT0.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3A-1.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN2.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-1.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-1.1")
	then

		modify($tFact){	addRulesApplied("Stage3A-1.1") }
		modify($nFact){	addRulesApplied("Stage3A-1.1") }
		modify($mFact){	addRulesApplied("Stage3A-1.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T1, N2, M0, then Stage IIIA Breast Cancer 
rule "Stage3A-2.1"
	salience 10011
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3A-2.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN2.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-2.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-2.1")
	then

		modify($tFact){	addRulesApplied("Stage3A-2.1") }
		modify($nFact){	addRulesApplied("Stage3A-2.1") }
		modify($mFact){	addRulesApplied("Stage3A-2.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T2, N2, M0, then Stage IIIA Breast Cancer 
rule "Stage3A-3.1"
	salience 10012
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT2.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3A-3.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN2.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-3.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-3.1")
	then

		modify($tFact){	addRulesApplied("Stage3A-3.1") }
		modify($nFact){	addRulesApplied("Stage3A-3.1") }
		modify($mFact){	addRulesApplied("Stage3A-3.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T3, N1, M0, then Stage IIIA Breast Cancer 
rule "Stage3A-4.1"
	salience 10013
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT3.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3A-4.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-4.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-4.1")
	then

		modify($tFact){	addRulesApplied("Stage3A-4.1") }
		modify($nFact){	addRulesApplied("Stage3A-4.1") }
		modify($mFact){	addRulesApplied("Stage3A-4.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T3, N2, M0, then Stage IIIA Breast Cancer 
rule "Stage3A-5.1"
	salience 10014
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT3.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3A-5.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN2.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-5.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3A-5.1")
	then

		modify($tFact){	addRulesApplied("Stage3A-5.1") }
		modify($nFact){	addRulesApplied("Stage3A-5.1") }
		modify($mFact){	addRulesApplied("Stage3A-5.1") }
			
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIA_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T4, N0, M0, then Stage IIIB Breast Cancer 
rule "Stage3B-1.1"
	salience 10015
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT4.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3B-1.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-1.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-1.1")
	then

		modify($tFact){	addRulesApplied("Stage3B-1.1") }
		modify($nFact){	addRulesApplied("Stage3B-1.1") }
		modify($mFact){	addRulesApplied("Stage3B-1.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T4, N1, M0, then Stage IIIB Breast Cancer 
rule "Stage3B-2.1"
	salience 10016
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT4.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3B-2.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-2.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-2.1")
	then

		modify($tFact){	addRulesApplied("Stage3B-2.1") }
		modify($nFact){	addRulesApplied("Stage3B-2.1") }
		modify($mFact){	addRulesApplied("Stage3B-2.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If T4, N2, M0, then Stage IIIB Breast Cancer 
rule "Stage3B-3.1"
	salience 10017
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT4.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3B-3.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN2.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-3.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3B-3.1")
	then

		modify($tFact){	addRulesApplied("Stage3B-3.1") }
		modify($nFact){	addRulesApplied("Stage3B-3.1") }
		modify($mFact){	addRulesApplied("Stage3B-3.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIB_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If any T value, N3, M0, then Stage IIIC Breast Cancer 
rule "Stage3C-1.1"
	salience 10018
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage3C-1.1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN3.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3C-1.1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage3C-1.1")
	then

		modify($tFact){	addRulesApplied("Stage3C-1.1") }
		modify($nFact){	addRulesApplied("Stage3C-1.1") }
		modify($mFact){	addRulesApplied("Stage3C-1.1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIIC_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If any T value, any N value, M1, then Stage IV Breast Cancer  
rule "Stage4-1"
	salience 10019
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Stage4-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage4-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM1.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage4-1")
	then

		modify($tFact){	addRulesApplied("Stage4-1") }
		modify($nFact){	addRulesApplied("Stage4-1") }
		modify($mFact){	addRulesApplied("Stage4-1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IV_Breast_Cancer");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

/*
* If there is a stage in the documants - use it, don't infer any
*/
rule "Stage-from-FHIR"
	//salience 9999
	salience 19999
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_BREAST)
		$record : MedicalRecord() 
		not( Fact (category == FHIRConstants.HAS_CANCER_STAGE, documentType == FHIRConstants.RECORD_SUMMARY))
		
		$stages : Set() 
		from collect (Fact (category == FHIRConstants.HAS_CANCER_STAGE, documentType != FHIRConstants.RECORD_SUMMARY))
	then
		for(Object obj : $stages){
			String genericStage = ((Fact)obj).getName();
			genericStage = genericStage.replace("1", "I");
			genericStage = genericStage.replace("2", "II");
			genericStage = genericStage.replace("3", "III");
			genericStage = genericStage.replace("4", "IV");
			genericStage = genericStage+"_Breast_Cancer";
			
			Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#"+genericStage);
			List<Fact> provFacts = new ArrayList<Fact>();
			provFacts.add(((Fact)obj)); 
			stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY);
		
			modify($record){
				getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
			}
			insert(stageF);		
			System.out.print(".");
		}
		
		if($stages.size() > 0 )
			insert ("do_not_infer_stage");
		
end

rule "clean_do_not_infer_stage"
	salience 1
	no-loop true
	when
		$str : String(this == "do_not_infer_stage")
	then
		retract($str);
end
		