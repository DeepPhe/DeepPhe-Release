package org.healthnlp.deepphe.uima.drools;

import java.lang.Object;
import java.util.List;
import java.util.ArrayList;

import org.healthnlp.deepphe.util.FHIRUtils;
import org.healthnlp.deepphe.util.FHIRConstants;

import org.healthnlp.deepphe.fhir.fact.Fact;
import org.healthnlp.deepphe.fhir.fact.FactFactory;

import org.healthnlp.deepphe.fhir.summary.*;
import org.healthnlp.deepphe.uima.drools.Summarizer;




//If Clinical cTis, cN0, cM0 then Stage 0 Skin Melanoma 
rule "Mela-Clinical-Stage0"
	salience 10001
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cTis.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage0")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage0")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage0")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage0") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage0") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage0") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_0_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}			
		System.out.print(".");
end




//If Clinical cT1a, cN0, cM0, then Stage IA Skin Melanoma 
rule "Mela-Clinical-Stage1A"
	salience 10002
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1a.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage1A")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1A")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1A")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage1A") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage1A") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage1A") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IA_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If Clinical cT1b, cN0, cM0, then Stage IB Skin Melanoma  
rule "Mela-Clinical-Stage1B-1"
	salience 10003
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT1b.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage1B-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1B-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1B-1")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage1B-1") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage1B-1") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage1B-1") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IB_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end


//If Clinical cT2a, cN0, cM0, then Stage IB Skin Melanoma  
rule "Mela-Clinical-Stage1B-2"
	salience 10004
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT2a.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage1B-2")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1B-2")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage1B-2")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage1B-2") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage1B-2") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage1B-2") }
			
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IB_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If Clinical cT2b, cN0, cM0, then Stage IIA Skin Melanoma  
rule "Mela-Clinical-Stage2A-1"
	salience 10005
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT2b.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage2A-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2A-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Stage2A-1.1")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage2A-1") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage2A-1") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage2A-1") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIA_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end


//If Clinical cT3a, cN0, cM0, then Stage IIA Skin Melanoma   
rule "Mela-Clinical-Stage2A-2"
	salience 10006
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT3a.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage2A-2")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2A-2")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2A-2")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage2A-2") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage2A-2") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage2A-2") }
				
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIA_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF);
		}			
		System.out.print(".");
end

//If Clinical cT3b, cN0, cM0, then Stage IIB Skin Melanoma 
rule "Mela-Clinical-Stage2B-1"
	salience 10008
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT3b.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage2B-1")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2B-1")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2B-1")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage2B-1") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage2B-1") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage2B-1") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIB_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If Clinical cT4a, cN0, cM0, then Stage IIB Skin Melanoma 
rule "Mela-Clinical-Stage2B-2"
	salience 10010
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT4a.*", $patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage2B-2")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2B-2")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage2B-2")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage2B-2") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage2B-2") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage2B-2") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIB_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If Clinical cT4b, cN0, cM0, then Stage IIB Skin Melanoma 
rule "Mela-Clinical-Stage2B-3"
	salience 10012
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$tFact : Fact(category == FHIRConstants.HAS_CLINICAL_T_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  $uri:uri, name matches ".*cT4b.*", 
					$patientId : patientIdentifier, $docId : documentIdentifier, rulesApplied not contains "Mela-Clinical-Stage2B-3")
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN0.*", 
					patientIdentifier==$patientId, documentIdentifier==$docId, rulesApplied not contains "Mela-Clinical-Stage2B-3")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", 
					patientIdentifier==$patientId, documentIdentifier==$docId, rulesApplied not contains "Mela-Clinical-Stage2B-3")
	then

		modify($tFact){	addRulesApplied("Mela-Clinical-Stage2B-3") }
		modify($nFact){	addRulesApplied("Mela-Clinical-Stage2B-3") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage2B-3") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IIB_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($tFact); provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If Clinical cN1, cM0, then Stage III Skin Melanoma 
rule "Mela-Clinical-Stage3"
	salience 10014
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$nFact : Fact(category == FHIRConstants.HAS_CLINICAL_N_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY, name matches ".*cN1.*", 
					$patientId : patientIdentifier, $docId : documentIdentifier, 
					rulesApplied not contains "Mela-Clinical-Stage3")
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM0.*", 
				patientIdentifier==$patientId, documentIdentifier==$docId, 
					rulesApplied not contains "Mela-Clinical-Stage3")
	then

		modify($nFact){	addRulesApplied("Mela-Clinical-Stage3") }
		modify($mFact){	addRulesApplied("Mela-Clinical-Stage3") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_III_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($nFact); provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end

//If Clinical cM1, then Stage IV Skin Melanoma 
rule "Mela-Clinical-Stage4"
	salience 10016
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not (String(this == "do_not_infer_stage"))		
		$mFact : Fact(category == FHIRConstants.HAS_CLINICAL_M_CLASSIFICATION, documentType == FHIRConstants.RECORD_SUMMARY,  name matches ".*cM1.*", 
					rulesApplied not contains "Mela-Clinical-Stage4")
	then

		modify($mFact){	addRulesApplied("Mela-Clinical-Stage4") }
		
		Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#Stage_IV_Skin_Melanoma");
		List<Fact> provFacts = new ArrayList<Fact>();
		provFacts.add($mFact);
		stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY); insert(stageF);
		
		modify($record){
			getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
		}
				
		System.out.print(".");
end



// If there is a stage in the documants - use it, don't infer any
rule "mela-Stage-from-FHIR"
	//salience 9999
	salience 19999
	no-loop true
	when
		$domain : Domain(domainName == FHIRConstants.DOMAIN_MELANOMA)
		$record : MedicalRecord() 
		not( Fact (category == FHIRConstants.HAS_CANCER_STAGE, documentType == FHIRConstants.RECORD_SUMMARY))
		
		$stages : Set() 
		from collect (Fact (category == FHIRConstants.HAS_CANCER_STAGE, documentType != FHIRConstants.RECORD_SUMMARY))
	then
		for(Object obj : $stages){
			String genericStage = ((Fact)obj).getName();
			genericStage = genericStage.replace("1", "I");
			genericStage = genericStage.replace("2", "II");
			genericStage = genericStage.replace("3", "III");
			genericStage = genericStage.replace("4", "IV");
			genericStage = genericStage+"__Skin_Melanoma";
			
			Fact stageF =  FactFactory.createFact(FHIRConstants.CONDITION, $domain.getOntologyURI()+"#"+genericStage);
			List<Fact> provFacts = new ArrayList<Fact>();
			provFacts.add(((Fact)obj)); 
			stageF.addProvenanceFacts(provFacts); stageF.setDocumentType(FHIRConstants.RECORD_SUMMARY);
		
			modify($record){
				getCancerSummary().getPhenotype().addFact(FHIRConstants.HAS_CANCER_STAGE, stageF)
			}
			insert(stageF);		
			System.out.print(".");
		}
		
		if($stages.size() > 0 )
			insert ("do_not_infer_stage");
		
end

rule "mela-clean_do_not_infer_stage"
	salience 1
	no-loop true
	when
		$str : String(this == "do_not_infer_stage")
	then
		retract($str);
end
/**/		