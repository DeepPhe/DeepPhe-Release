//created on: Apr 26, 2018
package org.healthnlp.deepphe.uima.drools.melanoma

import java.util.Set;
import java.lang.Integer;
import java.util.Map;
import java.util.HashMap;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;

import org.healthnlp.deepphe.util.FHIRUtils;
import org.healthnlp.deepphe.util.FHIRConstants;

import org.healthnlp.deepphe.fact.Fact;
import org.healthnlp.deepphe.fact.FactFactory;
import org.healthnlp.deepphe.fact.FactHelper;

import org.healthnlp.deepphe.summary.*;
import org.healthnlp.deepphe.uima.drools.*;


declare Suffixes
	suffixList : List
end

rule "initSuffixies"
	salience 55660
	no-loop true
	when
		not(Suffixes())
	then
		Suffixes sf = new Suffixes();
		sf.setSuffixList(new ArrayList<String>());
		insert(sf);
end


					
					
rule "setPathologic_ANY_Classification"
salience 55690
	no-loop true
	when
		$record : MedicalRecord()
		$domain : Domain()
		
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, 
					$newSummaryId : summaryId)
				
		$origFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_PATHOLOGIC_TNM_PATTERN)
					
		not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_PATHOLOGIC_TNM_PATTERN, provenanceFacts contains $origFact))
			
		$TNMSet : Set() 
		from collect (Fact (documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_PATHOLOGIC_TNM_PATTERN))	
	
	then
//System.out.println("setPathologic_ANY_Classification");
		for(Object obj : $TNMSet){
			Fact fct = (Fact)obj;
			fct.setSummaryType(FHIRConstants.CANCER_SUMMARY);
			String newId = "WasCancerPhenotype" +"-"+$newSummaryId.replace(FHIRConstants.CANCER_SUMMARY +"-","");
			Fact cf = FactFactory.createFact(fct, fct.getType(), 
						fct.getUri(), FHIRConstants.RECORD_SUMMARY);
			cf.setName(fct.getName());
			cf.setIdentifier(newId);
			cf.setSummaryId($newSummaryId);
			cf.getProvenanceFacts().add(fct);
			cf.addRulesApplied("setPathologic_ANY_Classification");
			insert(cf);
			FactHelper.addFactToSummary(cf, $record.getCancerSummary(), newId, $domain.getOntologyURI());
		}
end 

/**
* Set generic classification for all TNM if any. 
* ATTN: works for one Cancer only
*/
rule "setGeneric_ANY_Classification"
salience 55659
	no-loop true
	when
		$record : MedicalRecord()
		$domain : Domain()
		
		
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, 
					$newSummaryId : summaryId)
				
		$origFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_GENERIC_TNM_PATTERN)
					
		not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_GENERIC_TNM_PATTERN, provenanceFacts contains $origFact))
			
		$TNMSet : Set() 
		from collect (Fact (documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_GENERIC_TNM_PATTERN))	
		
	then
//System.out.println("setGeneric_ANY_Classification");
			Fact f = null;
			Fact cf = null;
			String newId = "";
			for(Object obj : $TNMSet){
				f = (Fact)obj;
				newId = "WasCancerPhenotype" +"-"+$newSummaryId.replace(FHIRConstants.CANCER_SUMMARY +"-","");
				modify(f){	addRulesApplied("setGeneric_ANY_Classification") };
				
				cf = FactFactory.createFact(f, f.getType(), 
						$domain.getOntologyURI()+"#"+f.getName(), FHIRConstants.RECORD_SUMMARY);
				cf.setIdentifier(FHIRConstants.CANCER_SUMMARY+"-"+cf.hashCode());
				cf.setSummaryId($newSummaryId);
				cf.addProvenanceFact(f);
				cf.addContainerIdentifier($newSummaryId);
				cf.addRulesApplied("setGeneric_ANY_Classification");
				insert(cf);
					
				FactHelper.addFactToSummary(cf, $record.getCancerSummary(), newId, $domain.getOntologyURI());
			
				// also convert Generic to Clinical
				Set<String> tSet = GenericToMelaTNMMapper.getMelaClassification(FHIRConstants.C_MODIFIER, 
							f.getName(), null);	
				
					
				for(String tnmName: tSet){
					cf = FactFactory.createFact(f, f.getType(), 
								$domain.getOntologyURI()+"#"+f.getName(), FHIRConstants.RECORD_SUMMARY);
						cf.setIdentifier(FHIRConstants.CANCER_SUMMARY+"-"+cf.hashCode());
						cf.setSummaryType(FHIRConstants.CANCER_SUMMARY);
						cf.setSummaryId($newSummaryId);
						cf.addProvenanceFact(f);
						cf.setName(tnmName);
						cf.setCategory(f.getCategory().replace("Generic", "Clinical"));
						cf.addContainerIdentifier($newSummaryId);
						cf.addRulesApplied("setGeneric_ANY_Classification");
						insert(cf);
						
						FactHelper.addFactToSummary(cf, $record.getCancerSummary(), newId, $domain.getOntologyURI());
				}
			}
end

rule "setClinical_ANY_Classification"
salience 55690
	no-loop true
	when
		$record : MedicalRecord()
		$domain : Domain()
		
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, 
					$newSummaryId : summaryId)
				
		$origFact : Fact(documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_CLINICAL_TNM_PATTERN)
					
		not(Fact(documentType == FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_CLINICAL_TNM_PATTERN, provenanceFacts contains $origFact))
			
		$TNMSet : Set() 
		from collect (Fact (documentType != FHIRConstants.RECORD_SUMMARY, type == FHIRConstants.TNM_STAGE,
					category matches FHIRConstants.HAS_CLINICAL_TNM_PATTERN))	
	
	then
//System.out.println("setClinical_ANY_Classification");
		for(Object obj : $TNMSet){
			Fact fct = (Fact)obj;
			fct.setSummaryType(FHIRConstants.CANCER_SUMMARY);
			String newId = "WasCancerPhenotype" +"-"+$newSummaryId.replace(FHIRConstants.CANCER_SUMMARY +"-","");
			Fact cf = FactFactory.createFact(fct, fct.getType(), 
						fct.getUri(), FHIRConstants.RECORD_SUMMARY);
			cf.setName(fct.getName());
			cf.setIdentifier(newId);
			cf.setSummaryId($newSummaryId);
			cf.getProvenanceFacts().add(fct);
			cf.addRulesApplied("setClinical_ANY_Classification");
			insert(cf);
			FactHelper.addFactToSummary(cf, $record.getCancerSummary(), newId, $domain.getOntologyURI());
		}
end 


/**
* create record-level prefixes
*/
rule "record-setTNMPrefix"
	salience 55556
	no-loop true
	when
		$record : MedicalRecord()
		$domain : Domain()
		$cancerFact : Fact(summaryType==FHIRConstants.CANCER_SUMMARY, documentType == FHIRConstants.RECORD_SUMMARY, 
					category == FHIRConstants.HAS_T_CLASSIFICATION, $newSummaryId : summaryId)
		IdMapper($oldSummaryId : oldSummaryId, $newSummaryId == newSummaryId)
		
		$tnmPrefFact : Fact(summaryType == FHIRConstants.CANCER_SUMMARY , documentType != FHIRConstants.RECORD_SUMMARY, 
					category == FHIRConstants.HAS_TNM_PREFIX, summaryId == $oldSummaryId, $name : name)
		not(Fact (summaryType == FHIRConstants.CANCER_SUMMARY , documentType == FHIRConstants.RECORD_SUMMARY,
			category == FHIRConstants.HAS_TNM_PREFIX, provenanceFacts contains $tnmPrefFact))
			
		then
//System.out.println("record-setTNMPrefix");
			String newId = "WasCancerPhenotype" +"-"+$newSummaryId.replace(FHIRConstants.CANCER_SUMMARY +"-","");
			Fact cf = FactFactory.createFact($tnmPrefFact, $tnmPrefFact.getType(), $domain.getOntologyURI()+"#"+$name,
						FHIRConstants.RECORD_SUMMARY);
			cf.setIdentifier(newId); 
			cf.setSummaryId($newSummaryId);
			cf.addProvenanceFact($tnmPrefFact);
			//cf.addContainerIdentifier($newSummaryId);		
			
			insert(cf);
			insert(new IdMapper($tnmPrefFact.getIdentifier(), newId, $tnmPrefFact.getSummaryId(), $newSummaryId));
			FactHelper.addFactToSummary(cf, $record.getCancerSummary(), newId, $domain.getOntologyURI());

end